import{closest}from"../utils/util.js";const STATE_FOCUS="focus",STATE_BLUR="blur";export default class Focus{constructor(e){this.Reveal=e,this.onRevealPointerDown=this.onRevealPointerDown.bind(this),this.onDocumentPointerDown=this.onDocumentPointerDown.bind(this)}configure(e,t){e.embedded?this.blur():(this.focus(),this.unbind())}bind(){this.Reveal.getConfig().embedded&&this.Reveal.getRevealElement().addEventListener("pointerdown",this.onRevealPointerDown,!1)}unbind(){this.Reveal.getRevealElement().removeEventListener("pointerdown",this.onRevealPointerDown,!1),document.removeEventListener("pointerdown",this.onDocumentPointerDown,!1)}focus(){this.state!==STATE_FOCUS&&(this.Reveal.getRevealElement().classList.add("focused"),document.addEventListener("pointerdown",this.onDocumentPointerDown,!1)),this.state=STATE_FOCUS}blur(){this.state!==STATE_BLUR&&(this.Reveal.getRevealElement().classList.remove("focused"),document.removeEventListener("pointerdown",this.onDocumentPointerDown,!1)),this.state=STATE_BLUR}isFocused(){return this.state===STATE_FOCUS}onRevealPointerDown(e){this.focus()}onDocumentPointerDown(e){let t=closest(e.target,".reveal");t&&t===this.Reveal.getRevealElement()||this.blur()}};